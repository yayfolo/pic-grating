# ===== GC_2D_xy_TE0_800nm_ff0p5_50_fullEtch_BOX1um_CLAD1um_INLINE_OK.lsf =====
# 2D=XY（把物理 Z→Y）。波导沿 +X，光栅把能量耦到 +Y（=物理 +Z）。
# 最小改动：参数改为 800 nm 周期、ff=0.5、50 齿，Si 厚=蚀刻=220 nm（全刻蚀），BOX=1 µm，顶层 cladding=1 µm。
# 不用自定义函数；add 后立刻 get("name")；几何体不命名；仅源/监视器/域用 get("name") 句柄。

newproject; clear; deleteall; switchtolayout;

# -------- 参数 --------
period     = 0.8e-6;   # 800 nm
ff         = 0.50;     # 占空比
gc_number  = 50;       # 齿数（=周期数）
thick_Si   = 0.22e-6;  # 硅层 220 nm（全刻蚀）
thick_BOX  = 1.0e-6;   # BOX 1 µm
thick_Clad = 1.0e-6;   # 上包层 1 µm
Si_sub     = 4.0e-6;   # 衬底厚度（保留）
lambda0    = 1.55e-6;  # 1550 nm

mat_Si   = "Si (Silicon) - Palik";
mat_SiO2 = "SiO2 (Glass) - Palik";

Lg    = gc_number*period;            # 光栅总长（恰好 50*800nm）
x_min = -6e-6; 
x_max =  Lg + 6e-6;
y_min = -(thick_BOX + Si_sub + 0.2e-6);
y_max =  (thick_Si + thick_Clad + 2.0e-6);

gx0   = 0; 
gx1   = Lg;
src_x = -3.0e-6;
up_y  = thick_Si + 0.5e-6;           # 在上包层中（离硅顶 ~0.5 µm）

# -------- 结构（XY；几何体不命名，避免 name inactive）--------
redrawoff;

# 衬底 Si（位于 BOX 下）
addrect;
set("material",mat_Si);
set("x min",x_min); set("x max",x_max);
set("y min",-(thick_BOX+Si_sub)); set("y max",-thick_BOX);
set("override mesh order from material database",1); set("mesh order",1);

# BOX (SiO2) 1 µm
addrect;
set("material",mat_SiO2);
set("x min",x_min); set("x max",x_max);
set("y min",-thick_BOX); set("y max",0);
set("override mesh order from material database",1); set("mesh order",2);

# 填充 Si 层（刻蚀槽为 SiO2）
addrect;
set("material",mat_SiO2);
set("x min",x_min); set("x max",x_max);
set("y min",0); set("y max",thick_Si);
set("override mesh order from material database",1); set("mesh order",2);

# 左侧 Si 薄膜（入射区，未刻栅）
addrect;
set("material",mat_Si);
set("x min",x_min); set("x max",gx0);
set("y min",0); set("y max",thick_Si);
set("override mesh order from material database",1); set("mesh order",4);

# 光栅齿（Si 条；槽=SiO2，220 nm 全刻蚀）
for (i=0:gc_number-1) {
  addrect;
  set("material",mat_Si);
  set("x min", gx0 + i*period); 
  set("x max", gx0 + i*period + ff*period);  # 齿宽 = ff*period = 0.4 µm
  set("y min", 0); set("y max", thick_Si);
  set("override mesh order from material database",1); set("mesh order",4);
}

# 顶部包层 (SiO2) 1 µm
addrect;
set("material",mat_SiO2);
set("x min",x_min); set("x max",x_max);
set("y min",thick_Si); set("y max",thick_Si+thick_Clad);
set("override mesh order from material database",1); set("mesh order",2);

redrawon;

# -------- FDTD（2D XY）--------
addfdtd;
FDTD_NAME = get("name");                # 记录真实名
setnamed(FDTD_NAME,"dimension","2D");
setnamed(FDTD_NAME,"x min",x_min); setnamed(FDTD_NAME,"x max",x_max);
setnamed(FDTD_NAME,"y min",y_min); setnamed(FDTD_NAME,"y max",y_max);
setnamed(FDTD_NAME,"mesh accuracy",3);
setnamed(FDTD_NAME,"x min bc","PML"); setnamed(FDTD_NAME,"x max bc","PML");
setnamed(FDTD_NAME,"y min bc","PML"); setnamed(FDTD_NAME,"y max bc","PML");
setnamed(FDTD_NAME,"simulation time",2e-12);   # 非零仿真时间，确保会运行

# 单频（与源一致）
setglobalmonitor("frequency points",1);
setglobalmonitor("use source limits",1);
setglobalsource("center wavelength",lambda0);
setglobalsource("wavelength span",1e-9);       # 近似单频

# -------- 模式源：TE0（2D-XY 里等效用 fundamental TM）--------
addmode;
MODE_NAME = get("name");                # 记录真实名
setnamed(MODE_NAME,"injection axis","x-axis");
setnamed(MODE_NAME,"direction","Forward");
setnamed(MODE_NAME,"use global source settings",1);
setnamed(MODE_NAME,"x",src_x);
setnamed(MODE_NAME,"y",0.5*thick_Si);
setnamed(MODE_NAME,"y span",2e-6);
setnamed(MODE_NAME,"mode selection","fundamental TM");   # TE0 in 2D-XY

# -------- 监视器（add 后立刻取真实名）--------
# 向上功率 (+Y = 物理 +Z)，覆盖 grating 区域
addpower;   UP_NAME  = get("name");
setnamed(UP_NAME,"monitor type","2D Y-normal");
setnamed(UP_NAME,"x min",gx0); setnamed(UP_NAME,"x max",gx1);
setnamed(UP_NAME,"y",up_y);

# 输入功率（源右侧）
addpower;   PIN_NAME = get("name");
setnamed(PIN_NAME,"monitor type","2D X-normal");
setnamed(PIN_NAME,"x", src_x + 0.5e-6);
setnamed(PIN_NAME,"y min",-0.2e-6); setnamed(PIN_NAME,"y max",thick_Si + 0.8e-6);

# -------- 运行 & 直接取结果（无函数/无外部变量依赖）--------
run;

eta = -1;

if (haveresult(UP_NAME,"T")) {
  Tu  = transmission(UP_NAME);      # 单频点（源归一化）
  eta = abs(Tu(1));
} else {
  if (haveresult(UP_NAME,"P") & haveresult(PIN_NAME,"P")) {   # Lumerical 逻辑与用单个 &
    res_up  = getresult(UP_NAME,"P");   Pup = res_up.P;
    res_pin = getresult(PIN_NAME,"P");  Pin = res_pin.P;
    eta = Pup/(Pin+1e-30);
  }
}

if (eta<0) {
  # 兜底：极少数版本 2D TE/TM 标签相反，切到 TE 再跑一次
  setnamed(MODE_NAME,"mode selection","fundamental TE");
  run;
  eta2 = -1;
  if (haveresult(UP_NAME,"T")) {
    Tu2  = transmission(UP_NAME);
    eta2 = abs(Tu2(1));
  } else {
    if (haveresult(UP_NAME,"P") & haveresult(PIN_NAME,"P")) {
      res_up2  = getresult(UP_NAME,"P");   Pup2 = res_up2.P;
      res_pin2 = getresult(PIN_NAME,"P");  Pin2 = res_pin2.P;
      eta2 = Pup2/(Pin2+1e-30);
    }
  }
  eta = eta2;
}

if (eta>=0) {
  ? ("Upward coupling efficiency @ " + num2str(lambda0*1e9) + " nm = " + num2str(eta));
} else {
  ? "No usable result → 请检查：";
  ? " 1) P_up 监视器是否在域内（y="+num2str(up_y)+" ∈ ["+num2str(y_min)+", "+num2str(y_max)+"]）且为 '2D Y-normal'；";
  ? " 2) Pin 监视器是否为 '2D X-normal' 且在源右侧；";
  ? " 3) global monitor 单频设置（frequency points=1, use source limits=1）；";
  ? " 4) 源模式选择（TM/TE）与 2D-XY 的 TE0 对应关系。";
}

# （可选）保存数据
matlabsave("GC_2D_xy_TE0_800nm_ff0p5_50_fullEtch_BOX1um_CLAD1um_INLINE_OK_results");

